<!doctype html>

<title>Browser Matrix</title>
<style>
  body {
    font: 16px helvetica;
    color: #333;
  }
  table, td, th {
    font: inherit;
    border-collapse: collapse;
  }
  th {
    background: #ccc;
    text-align: left;
  }
  tr:nth-child(2n) td{
    background: #eee;
  }
  td, th {
    border-bottom: 1px dotted #aaa;
    padding: 4px 10px;
  }
</style>

<table>
  <thead>
    <tr>
      <th>OS</th>
      <th>Browser</th>
      <th>Version</th>
      <th>Views</th>
      <th>Percent</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="http://tablesorter.com/__jquery.tablesorter.js"></script>
<script>
  var matrix = {
    ids: 'ga:53872948',
    userToken: "<%= @token %>",

    buildUrl: function(dimensions, metrics, startDate, endDate){
      return "https://www.googleapis.com/analytics/v3/data/ga?"
      + "ids="+ encodeURIComponent(matrix.ids) +"&"
      + "dimensions="+ encodeURIComponent(dimensions) +"&"
      + "metrics="+ encodeURIComponent(metrics) +"&"
      + "start-date="+ encodeURIComponent(startDate) +"&"
      + "end-date="+ encodeURIComponent(endDate) +"&"
      + "max-results=10000&"
      + "access_token="+ encodeURIComponent(matrix.userToken) +"&"
      + "callback=?";
    },
    cleanup: [
      {
        key: /BlackBerry[0-9]+/,
        browser: 'BlackBerry',
        version: function(row){ return 'all'; }
      },
      {
        key: /Android Browser/,
        browser: 'Android Browser',
        version: function(row){
          var version = row[2].split('.');
          if(parseInt(version[0], 10) < 533){
            return ' < 2.2';
          } else if(version[0] === '533'){
            return '2.2 or 2.3';
          } else if(version[0] === '534' && version[1] === '13'){
            return '3.2.1';
          } else if(parseInt(version[0], 10) >= 534){
            return ' >= 4.0';
          }
        }
      },
      {
        key: /Chrome/,
        browser: 'Chrome',
        version: function(row){ return parseInt(row[2].split('.')[0], 10); }
      },
      {
        key: /Firefox/,
        browser: 'Firefox',
        version: function(row){ return row[2].split('.')[0]; }
      },
      {
        key: /Internet Explorer/,
        browser: 'Internet Explorer',
        version: function(row){ return row[2]; }
      },
      { 
        key: /nokia/i,
        browser: 'Nokia',
        version: function(row){ return 'all'; }
      },
      {
        key: /Safari/,
        browser: 'Safari', 
        version: function(row){ 
          var version = row[2].split('.');
          if(version[0] === '8536'){
            return 'iOS 6';
          } else if(version[0] === '7534'){
            return 'iOS 5';
          } else if(version[0] === '6533'){
            return 'iOS 4';
          } else if(version[0] === '533'){
            return '5';
          } else if(version[0] === '534'){
            return '5.1';
          } else if(version[0] === '536'){
            return '6';
          }
          return version[0];
        }
      },
      { 
        key: /SAMSUNG-GT.*/,
        browser: 'Samsung-GT',
        version: function(row){ return 'all'; }
      }
    ],

    cleanOS: function(value){
      if(value === 'Windows' || value === 'Macintosh' || value === 'Linux'){
        return 'Desktop';
      } else {
        return value;
      }
    },

    addData: function(cleanData, os, browser, version, count){
      os = matrix.cleanOS(os);
      if(typeof cleanData[os] === 'undefined'){
        cleanData[os] = {};
      }
      if(typeof cleanData[os][browser] === 'undefined'){
        cleanData[os][browser] = {};
      }
      if(typeof cleanData[os][browser][version] === 'undefined'){
        cleanData[os][browser][version] = 0;
      }
      cleanData[os][browser][version] += parseInt(count, 10);
      return cleanData;
    },

    percent: function(value, total){
      var percent = (value/total) * 100;
      return Math.round(percent * 100)/100;
    },
    display: function(data, totalVisitors){
      var os, browser, version,
          $tbody = $('table tbody');
      for(os in data){
      for(browser in data[os]){
        for(version in data[os][browser]){
          $tbody.append("<tr>"
          + "<td>"+ os +"</td>"
          + "<td>"+ browser +"</td>"
          + "<td>"+ version +"</td>"
          + "<td>"+ data[os][browser][version] +"</td>"
          + "<td>"+ matrix.percent(data[os][browser][version],totalVisitors) +"%</td>"
          +"</tr>")
        }
      }}
      $('table').tablesorter();
    },

    init: function(){
      $.getJSON(matrix.buildUrl('ga:operatingSystem,ga:browser,ga:browserVersion', 'ga:visitors', '2012-10-20', '2012-11-03'), 
        function(data){
          var cleanData = {},
              totalVisitors = data.totalsForAllResults['ga:visitors'];

          data.rows.forEach(function(data,i){
            var i, row, found = false;
            for(i in matrix.cleanup){
              row = matrix.cleanup[i];
              if(row.key.exec(data[1])){
                found = true;
                cleanData = matrix.addData(cleanData, data[0], row.browser, row.version(data), data[3]);
              }
            }
            if(found === false){
              cleanData = matrix.addData(cleanData, data[0], data[1], 'all', data[3]);
            }
          });

          matrix.display(cleanData, totalVisitors);
        }
      );
    }
  }

  matrix.init();

</script>
